module OpenTransit
  module Models
    type stop_ids_for_agency_list_response =
      { data: OpenTransit::Models::StopIDsForAgencyListResponse::Data }

    class StopIDsForAgencyListResponse < OpenTransit::Models::ResponseWrapper
      attr_accessor data: OpenTransit::Models::StopIDsForAgencyListResponse::Data

      def initialize:
        (data: OpenTransit::Models::StopIDsForAgencyListResponse::Data) -> void
        | (
          ?OpenTransit::Models::stop_ids_for_agency_list_response
          | OpenTransit::BaseModel data
        ) -> void

      def to_hash: -> OpenTransit::Models::stop_ids_for_agency_list_response

      type data =
        {
          limit_exceeded: bool,
          list: Array[String],
          references: OpenTransit::Models::References
        }

      class Data < OpenTransit::BaseModel
        attr_accessor limit_exceeded: bool

        attr_accessor list: Array[String]

        attr_accessor references: OpenTransit::Models::References

        def initialize:
          (
            limit_exceeded: bool,
            list: Array[String],
            references: OpenTransit::Models::References
          ) -> void
          | (
            ?OpenTransit::Models::StopIDsForAgencyListResponse::data
            | OpenTransit::BaseModel data
          ) -> void

        def to_hash: -> OpenTransit::Models::StopIDsForAgencyListResponse::data
      end
    end
  end
end
