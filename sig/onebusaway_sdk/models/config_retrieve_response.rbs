module OnebusawaySDK
  module Models
    type config_retrieve_response =
      { data: OnebusawaySDK::Models::ConfigRetrieveResponse::Data }

    class ConfigRetrieveResponse < OnebusawaySDK::Models::ResponseWrapper
      def data: -> OnebusawaySDK::Models::ConfigRetrieveResponse::Data

      def data=: (
        OnebusawaySDK::Models::ConfigRetrieveResponse::Data _
      ) -> OnebusawaySDK::Models::ConfigRetrieveResponse::Data

      def initialize: (
        data: OnebusawaySDK::Models::ConfigRetrieveResponse::Data
      ) -> void

      type data =
        {
          entry: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry,
          references: OnebusawaySDK::References
        }

      class Data < OnebusawaySDK::Internal::Type::BaseModel
        attr_accessor entry: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry

        attr_accessor references: OnebusawaySDK::References

        def initialize: (
          entry: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry,
          references: OnebusawaySDK::References
        ) -> void

        type entry =
          {
            id: String,
            git_properties: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry::GitProperties,
            name: String,
            service_date_from: String,
            service_date_to: String
          }

        class Entry < OnebusawaySDK::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_reader git_properties: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry::GitProperties?

          def git_properties=: (
            OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry::GitProperties
          ) -> OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry::GitProperties

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader service_date_from: String?

          def service_date_from=: (String) -> String

          attr_reader service_date_to: String?

          def service_date_to=: (String) -> String

          def initialize: (
            ?id: String,
            ?git_properties: OnebusawaySDK::Models::ConfigRetrieveResponse::Data::Entry::GitProperties,
            ?name: String,
            ?service_date_from: String,
            ?service_date_to: String
          ) -> void

          type git_properties =
            {
              git_branch: String,
              git_build_host: String,
              git_build_time: String,
              git_build_user_email: String,
              git_build_user_name: String,
              git_build_version: String,
              git_closest_tag_commit_count: String,
              git_closest_tag_name: String,
              git_commit_id: String,
              git_commit_id_abbrev: String,
              git_commit_id_describe: String,
              git_commit_id_describe_short: String,
              git_commit_message_full: String,
              git_commit_message_short: String,
              git_commit_time: String,
              git_commit_user_email: String,
              git_commit_user_name: String,
              git_dirty: String,
              git_remote_origin_url: String,
              git_tags: String
            }

          class GitProperties < OnebusawaySDK::Internal::Type::BaseModel
            attr_reader git_branch: String?

            def git_branch=: (String) -> String

            attr_reader git_build_host: String?

            def git_build_host=: (String) -> String

            attr_reader git_build_time: String?

            def git_build_time=: (String) -> String

            attr_reader git_build_user_email: String?

            def git_build_user_email=: (String) -> String

            attr_reader git_build_user_name: String?

            def git_build_user_name=: (String) -> String

            attr_reader git_build_version: String?

            def git_build_version=: (String) -> String

            attr_reader git_closest_tag_commit_count: String?

            def git_closest_tag_commit_count=: (String) -> String

            attr_reader git_closest_tag_name: String?

            def git_closest_tag_name=: (String) -> String

            attr_reader git_commit_id: String?

            def git_commit_id=: (String) -> String

            attr_reader git_commit_id_abbrev: String?

            def git_commit_id_abbrev=: (String) -> String

            attr_reader git_commit_id_describe: String?

            def git_commit_id_describe=: (String) -> String

            attr_reader git_commit_id_describe_short: String?

            def git_commit_id_describe_short=: (String) -> String

            attr_reader git_commit_message_full: String?

            def git_commit_message_full=: (String) -> String

            attr_reader git_commit_message_short: String?

            def git_commit_message_short=: (String) -> String

            attr_reader git_commit_time: String?

            def git_commit_time=: (String) -> String

            attr_reader git_commit_user_email: String?

            def git_commit_user_email=: (String) -> String

            attr_reader git_commit_user_name: String?

            def git_commit_user_name=: (String) -> String

            attr_reader git_dirty: String?

            def git_dirty=: (String) -> String

            attr_reader git_remote_origin_url: String?

            def git_remote_origin_url=: (String) -> String

            attr_reader git_tags: String?

            def git_tags=: (String) -> String

            def initialize: (
              ?git_branch: String,
              ?git_build_host: String,
              ?git_build_time: String,
              ?git_build_user_email: String,
              ?git_build_user_name: String,
              ?git_build_version: String,
              ?git_closest_tag_commit_count: String,
              ?git_closest_tag_name: String,
              ?git_commit_id: String,
              ?git_commit_id_abbrev: String,
              ?git_commit_id_describe: String,
              ?git_commit_id_describe_short: String,
              ?git_commit_message_full: String,
              ?git_commit_message_short: String,
              ?git_commit_time: String,
              ?git_commit_user_email: String,
              ?git_commit_user_name: String,
              ?git_dirty: String,
              ?git_remote_origin_url: String,
              ?git_tags: String
            ) -> void
          end
        end
      end
    end
  end
end
