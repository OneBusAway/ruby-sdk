module Onebusaway
  module Models
    type references =
      {
        agencies: ::Array[Onebusaway::Models::References::Agency],
        routes: ::Array[Onebusaway::Models::References::Route],
        situations: ::Array[Onebusaway::Models::References::Situation],
        stops: ::Array[Onebusaway::Models::References::Stop],
        stop_times: ::Array[Onebusaway::Models::References::StopTime],
        trips: ::Array[Onebusaway::Models::References::Trip]
      }

    class References < Onebusaway::BaseModel
      attr_accessor agencies: ::Array[Onebusaway::Models::References::Agency]

      attr_accessor routes: ::Array[Onebusaway::Models::References::Route]

      attr_accessor situations: ::Array[Onebusaway::Models::References::Situation]

      attr_accessor stops: ::Array[Onebusaway::Models::References::Stop]

      attr_accessor stop_times: ::Array[Onebusaway::Models::References::StopTime]

      attr_accessor trips: ::Array[Onebusaway::Models::References::Trip]

      def initialize:
        (
          agencies: ::Array[Onebusaway::Models::References::Agency],
          routes: ::Array[Onebusaway::Models::References::Route],
          situations: ::Array[Onebusaway::Models::References::Situation],
          stops: ::Array[Onebusaway::Models::References::Stop],
          stop_times: ::Array[Onebusaway::Models::References::StopTime],
          trips: ::Array[Onebusaway::Models::References::Trip]
        ) -> void
        | (?Onebusaway::Models::references | Onebusaway::BaseModel data) -> void

      def to_hash: -> Onebusaway::Models::references

      type agency =
        {
          id: String,
          name: String,
          timezone: String,
          url: String,
          disclaimer: String,
          email: String,
          fare_url: String,
          lang: String,
          phone: String,
          private_service: bool
        }

      class Agency < Onebusaway::BaseModel
        attr_accessor id: String

        attr_accessor name: String

        attr_accessor timezone: String

        attr_accessor url: String

        attr_reader disclaimer: String?

        def disclaimer=: (String) -> void

        attr_reader email: String?

        def email=: (String) -> void

        attr_reader fare_url: String?

        def fare_url=: (String) -> void

        attr_reader lang: String?

        def lang=: (String) -> void

        attr_reader phone: String?

        def phone=: (String) -> void

        attr_reader private_service: bool?

        def private_service=: (bool) -> void

        def initialize:
          (
            id: String,
            name: String,
            timezone: String,
            url: String,
            disclaimer: String,
            email: String,
            fare_url: String,
            lang: String,
            phone: String,
            private_service: bool
          ) -> void
          | (
            ?Onebusaway::Models::References::agency | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::agency
      end

      type route =
        {
          id: String,
          agency_id: String,
          type: Integer,
          color: String,
          description: String,
          long_name: String,
          null_safe_short_name: String,
          short_name: String,
          text_color: String,
          url: String
        }

      class Route < Onebusaway::BaseModel
        attr_accessor id: String

        attr_accessor agency_id: String

        attr_accessor type: Integer

        attr_reader color: String?

        def color=: (String) -> void

        attr_reader description: String?

        def description=: (String) -> void

        attr_reader long_name: String?

        def long_name=: (String) -> void

        attr_reader null_safe_short_name: String?

        def null_safe_short_name=: (String) -> void

        attr_reader short_name: String?

        def short_name=: (String) -> void

        attr_reader text_color: String?

        def text_color=: (String) -> void

        attr_reader url: String?

        def url=: (String) -> void

        def initialize:
          (
            id: String,
            agency_id: String,
            type: Integer,
            color: String,
            description: String,
            long_name: String,
            null_safe_short_name: String,
            short_name: String,
            text_color: String,
            url: String
          ) -> void
          | (
            ?Onebusaway::Models::References::route | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::route
      end

      type situation =
        {
          id: String,
          creation_time: Integer,
          active_windows: ::Array[Onebusaway::Models::References::Situation::ActiveWindow],
          all_affects: ::Array[Onebusaway::Models::References::Situation::AllAffect],
          consequence_message: String,
          consequences: ::Array[Onebusaway::Models::References::Situation::Consequence],
          description: Onebusaway::Models::References::Situation::Description,
          publication_windows: ::Array[Onebusaway::Models::References::Situation::PublicationWindow],
          reason: Onebusaway::Models::References::Situation::reason,
          severity: String,
          summary: Onebusaway::Models::References::Situation::Summary,
          url: Onebusaway::Models::References::Situation::URL
        }

      class Situation < Onebusaway::BaseModel
        attr_accessor id: String

        attr_accessor creation_time: Integer

        attr_reader active_windows: ::Array[Onebusaway::Models::References::Situation::ActiveWindow]?

        def active_windows=: (
          ::Array[Onebusaway::Models::References::Situation::ActiveWindow]
        ) -> void

        attr_reader all_affects: ::Array[Onebusaway::Models::References::Situation::AllAffect]?

        def all_affects=: (
          ::Array[Onebusaway::Models::References::Situation::AllAffect]
        ) -> void

        attr_reader consequence_message: String?

        def consequence_message=: (String) -> void

        attr_reader consequences: ::Array[Onebusaway::Models::References::Situation::Consequence]?

        def consequences=: (
          ::Array[Onebusaway::Models::References::Situation::Consequence]
        ) -> void

        attr_reader description: Onebusaway::Models::References::Situation::Description?

        def description=: (
          Onebusaway::Models::References::Situation::Description
        ) -> void

        attr_reader publication_windows: ::Array[Onebusaway::Models::References::Situation::PublicationWindow]?

        def publication_windows=: (
          ::Array[Onebusaway::Models::References::Situation::PublicationWindow]
        ) -> void

        attr_reader reason: Onebusaway::Models::References::Situation::reason?

        def reason=: (Onebusaway::Models::References::Situation::reason) -> void

        attr_reader severity: String?

        def severity=: (String) -> void

        attr_reader summary: Onebusaway::Models::References::Situation::Summary?

        def summary=: (
          Onebusaway::Models::References::Situation::Summary
        ) -> void

        attr_reader url: Onebusaway::Models::References::Situation::URL?

        def url=: (Onebusaway::Models::References::Situation::URL) -> void

        def initialize:
          (
            id: String,
            creation_time: Integer,
            active_windows: ::Array[Onebusaway::Models::References::Situation::ActiveWindow],
            all_affects: ::Array[Onebusaway::Models::References::Situation::AllAffect],
            consequence_message: String,
            consequences: ::Array[Onebusaway::Models::References::Situation::Consequence],
            description: Onebusaway::Models::References::Situation::Description,
            publication_windows: ::Array[Onebusaway::Models::References::Situation::PublicationWindow],
            reason: Onebusaway::Models::References::Situation::reason,
            severity: String,
            summary: Onebusaway::Models::References::Situation::Summary,
            url: Onebusaway::Models::References::Situation::URL
          ) -> void
          | (
            ?Onebusaway::Models::References::situation
            | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::situation

        type active_window = { from: Integer, to: Integer }

        class ActiveWindow < Onebusaway::BaseModel
          attr_reader from: Integer?

          def from=: (Integer) -> void

          attr_reader to: Integer?

          def to=: (Integer) -> void

          def initialize:
            (from: Integer, to: Integer) -> void
            | (
              ?Onebusaway::Models::References::Situation::active_window
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::active_window
        end

        type all_affect =
          {
            agency_id: String,
            application_id: String,
            direction_id: String,
            route_id: String,
            stop_id: String,
            trip_id: String
          }

        class AllAffect < Onebusaway::BaseModel
          attr_reader agency_id: String?

          def agency_id=: (String) -> void

          attr_reader application_id: String?

          def application_id=: (String) -> void

          attr_reader direction_id: String?

          def direction_id=: (String) -> void

          attr_reader route_id: String?

          def route_id=: (String) -> void

          attr_reader stop_id: String?

          def stop_id=: (String) -> void

          attr_reader trip_id: String?

          def trip_id=: (String) -> void

          def initialize:
            (
              agency_id: String,
              application_id: String,
              direction_id: String,
              route_id: String,
              stop_id: String,
              trip_id: String
            ) -> void
            | (
              ?Onebusaway::Models::References::Situation::all_affect
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::all_affect
        end

        type consequence =
          {
            condition: String,
            condition_details: Onebusaway::Models::References::Situation::Consequence::ConditionDetails
          }

        class Consequence < Onebusaway::BaseModel
          attr_reader condition: String?

          def condition=: (String) -> void

          attr_reader condition_details: Onebusaway::Models::References::Situation::Consequence::ConditionDetails?

          def condition_details=: (
            Onebusaway::Models::References::Situation::Consequence::ConditionDetails
          ) -> void

          def initialize:
            (
              condition: String,
              condition_details: Onebusaway::Models::References::Situation::Consequence::ConditionDetails
            ) -> void
            | (
              ?Onebusaway::Models::References::Situation::consequence
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::consequence

          type condition_details =
            {
              diversion_path: Onebusaway::Models::References::Situation::Consequence::ConditionDetails::DiversionPath,
              diversion_stop_ids: ::Array[String]
            }

          class ConditionDetails < Onebusaway::BaseModel
            attr_reader diversion_path: Onebusaway::Models::References::Situation::Consequence::ConditionDetails::DiversionPath?

            def diversion_path=: (
              Onebusaway::Models::References::Situation::Consequence::ConditionDetails::DiversionPath
            ) -> void

            attr_reader diversion_stop_ids: ::Array[String]?

            def diversion_stop_ids=: (::Array[String]) -> void

            def initialize:
              (
                diversion_path: Onebusaway::Models::References::Situation::Consequence::ConditionDetails::DiversionPath,
                diversion_stop_ids: ::Array[String]
              ) -> void
              | (
                ?Onebusaway::Models::References::Situation::Consequence::condition_details
                | Onebusaway::BaseModel data
              ) -> void

            def to_hash: -> Onebusaway::Models::References::Situation::Consequence::condition_details

            type diversion_path =
              { length: Integer, levels: String, points: String }

            class DiversionPath < Onebusaway::BaseModel
              attr_reader length: Integer?

              def length=: (Integer) -> void

              attr_reader levels: String?

              def levels=: (String) -> void

              attr_reader points: String?

              def points=: (String) -> void

              def initialize:
                (length: Integer, levels: String, points: String) -> void
                | (
                  ?Onebusaway::Models::References::Situation::Consequence::ConditionDetails::diversion_path
                  | Onebusaway::BaseModel data
                ) -> void

              def to_hash: -> Onebusaway::Models::References::Situation::Consequence::ConditionDetails::diversion_path
            end
          end
        end

        type description = { lang: String, value: String }

        class Description < Onebusaway::BaseModel
          attr_reader lang: String?

          def lang=: (String) -> void

          attr_reader value: String?

          def value=: (String) -> void

          def initialize:
            (lang: String, value: String) -> void
            | (
              ?Onebusaway::Models::References::Situation::description
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::description
        end

        type publication_window = { from: Integer, to: Integer }

        class PublicationWindow < Onebusaway::BaseModel
          attr_accessor from: Integer

          attr_accessor to: Integer

          def initialize:
            (from: Integer, to: Integer) -> void
            | (
              ?Onebusaway::Models::References::Situation::publication_window
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::publication_window
        end

        type reason =
          :equipmentReason
          | :environmentReason
          | :personnelReason
          | :miscellaneousReason
          | :securityAlert

        class Reason < Onebusaway::Enum
          EQUIPMENT_REASON: :equipmentReason
          ENVIRONMENT_REASON: :environmentReason
          PERSONNEL_REASON: :personnelReason
          MISCELLANEOUS_REASON: :miscellaneousReason
          SECURITY_ALERT: :securityAlert

          def self.values: -> ::Array[Onebusaway::Models::References::Situation::reason]
        end

        type summary = { lang: String, value: String }

        class Summary < Onebusaway::BaseModel
          attr_reader lang: String?

          def lang=: (String) -> void

          attr_reader value: String?

          def value=: (String) -> void

          def initialize:
            (lang: String, value: String) -> void
            | (
              ?Onebusaway::Models::References::Situation::summary
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::summary
        end

        type url = { lang: String, value: String }

        class URL < Onebusaway::BaseModel
          attr_reader lang: String?

          def lang=: (String) -> void

          attr_reader value: String?

          def value=: (String) -> void

          def initialize:
            (lang: String, value: String) -> void
            | (
              ?Onebusaway::Models::References::Situation::url
              | Onebusaway::BaseModel data
            ) -> void

          def to_hash: -> Onebusaway::Models::References::Situation::url
        end
      end

      type stop =
        {
          id: String,
          lat: Float,
          lon: Float,
          name: String,
          parent: String,
          route_ids: ::Array[String],
          static_route_ids: ::Array[String],
          code: String,
          direction: String,
          location_type: Integer,
          wheelchair_boarding: String
        }

      class Stop < Onebusaway::BaseModel
        attr_accessor id: String

        attr_accessor lat: Float

        attr_accessor lon: Float

        attr_accessor name: String

        attr_accessor parent: String

        attr_accessor route_ids: ::Array[String]

        attr_accessor static_route_ids: ::Array[String]

        attr_reader code: String?

        def code=: (String) -> void

        attr_reader direction: String?

        def direction=: (String) -> void

        attr_reader location_type: Integer?

        def location_type=: (Integer) -> void

        attr_reader wheelchair_boarding: String?

        def wheelchair_boarding=: (String) -> void

        def initialize:
          (
            id: String,
            lat: Float,
            lon: Float,
            name: String,
            parent: String,
            route_ids: ::Array[String],
            static_route_ids: ::Array[String],
            code: String,
            direction: String,
            location_type: Integer,
            wheelchair_boarding: String
          ) -> void
          | (
            ?Onebusaway::Models::References::stop | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::stop
      end

      type stop_time =
        {
          arrival_time: Integer,
          departure_time: Integer,
          distance_along_trip: Float,
          historical_occupancy: String,
          stop_headsign: String,
          stop_id: String
        }

      class StopTime < Onebusaway::BaseModel
        attr_reader arrival_time: Integer?

        def arrival_time=: (Integer) -> void

        attr_reader departure_time: Integer?

        def departure_time=: (Integer) -> void

        attr_reader distance_along_trip: Float?

        def distance_along_trip=: (Float) -> void

        attr_reader historical_occupancy: String?

        def historical_occupancy=: (String) -> void

        attr_reader stop_headsign: String?

        def stop_headsign=: (String) -> void

        attr_reader stop_id: String?

        def stop_id=: (String) -> void

        def initialize:
          (
            arrival_time: Integer,
            departure_time: Integer,
            distance_along_trip: Float,
            historical_occupancy: String,
            stop_headsign: String,
            stop_id: String
          ) -> void
          | (
            ?Onebusaway::Models::References::stop_time
            | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::stop_time
      end

      type trip =
        {
          id: String,
          route_id: String,
          service_id: String,
          block_id: String,
          direction_id: String,
          peak_offpeak: Integer,
          route_short_name: String,
          shape_id: String,
          time_zone: String,
          trip_headsign: String,
          trip_short_name: String
        }

      class Trip < Onebusaway::BaseModel
        attr_accessor id: String

        attr_accessor route_id: String

        attr_accessor service_id: String

        attr_reader block_id: String?

        def block_id=: (String) -> void

        attr_reader direction_id: String?

        def direction_id=: (String) -> void

        attr_reader peak_offpeak: Integer?

        def peak_offpeak=: (Integer) -> void

        attr_reader route_short_name: String?

        def route_short_name=: (String) -> void

        attr_reader shape_id: String?

        def shape_id=: (String) -> void

        attr_reader time_zone: String?

        def time_zone=: (String) -> void

        attr_reader trip_headsign: String?

        def trip_headsign=: (String) -> void

        attr_reader trip_short_name: String?

        def trip_short_name=: (String) -> void

        def initialize:
          (
            id: String,
            route_id: String,
            service_id: String,
            block_id: String,
            direction_id: String,
            peak_offpeak: Integer,
            route_short_name: String,
            shape_id: String,
            time_zone: String,
            trip_headsign: String,
            trip_short_name: String
          ) -> void
          | (
            ?Onebusaway::Models::References::trip | Onebusaway::BaseModel data
          ) -> void

        def to_hash: -> Onebusaway::Models::References::trip
      end
    end
  end
end
