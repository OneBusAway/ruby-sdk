module OpenTransit
  module Models
    type block_retrieve_response =
      { data: OpenTransit::Models::BlockRetrieveResponse::Data }

    class BlockRetrieveResponse < OpenTransit::Models::ResponseWrapper
      def data: -> OpenTransit::Models::BlockRetrieveResponse::Data

      def data=: (
        OpenTransit::Models::BlockRetrieveResponse::Data _
      ) -> OpenTransit::Models::BlockRetrieveResponse::Data

      def initialize: (
        data: OpenTransit::Models::BlockRetrieveResponse::Data
      ) -> void

      type data =
        {
          entry: OpenTransit::Models::BlockRetrieveResponse::Data::Entry,
          references: OpenTransit::References
        }

      class Data < OpenTransit::Internal::Type::BaseModel
        attr_accessor entry: OpenTransit::Models::BlockRetrieveResponse::Data::Entry

        attr_accessor references: OpenTransit::References

        def initialize: (
          entry: OpenTransit::Models::BlockRetrieveResponse::Data::Entry,
          references: OpenTransit::References
        ) -> void

        type entry =
          {
            id: String,
            configurations: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration]
          }

        class Entry < OpenTransit::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor configurations: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration]

          def initialize: (
            id: String,
            configurations: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration]
          ) -> void

          type configuration =
            {
              active_service_ids: ::Array[String],
              trips: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip],
              inactive_service_ids: ::Array[String]
            }

          class Configuration < OpenTransit::Internal::Type::BaseModel
            attr_accessor active_service_ids: ::Array[String]

            attr_accessor trips: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip]

            attr_reader inactive_service_ids: ::Array[String]?

            def inactive_service_ids=: (::Array[String]) -> ::Array[String]

            def initialize: (
              active_service_ids: ::Array[String],
              trips: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip],
              ?inactive_service_ids: ::Array[String]
            ) -> void

            type trip =
              {
                accumulated_slack_time: Float,
                block_stop_times: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime],
                distance_along_block: Float,
                trip_id: String
              }

            class Trip < OpenTransit::Internal::Type::BaseModel
              attr_accessor accumulated_slack_time: Float

              attr_accessor block_stop_times: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime]

              attr_accessor distance_along_block: Float

              attr_accessor trip_id: String

              def initialize: (
                accumulated_slack_time: Float,
                block_stop_times: ::Array[OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime],
                distance_along_block: Float,
                trip_id: String
              ) -> void

              type block_stop_time =
                {
                  accumulated_slack_time: Float,
                  block_sequence: Integer,
                  distance_along_block: Float,
                  stop_time: OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime::StopTime
                }

              class BlockStopTime < OpenTransit::Internal::Type::BaseModel
                attr_accessor accumulated_slack_time: Float

                attr_accessor block_sequence: Integer

                attr_accessor distance_along_block: Float

                attr_accessor stop_time: OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime::StopTime

                def initialize: (
                  accumulated_slack_time: Float,
                  block_sequence: Integer,
                  distance_along_block: Float,
                  stop_time: OpenTransit::Models::BlockRetrieveResponse::Data::Entry::Configuration::Trip::BlockStopTime::StopTime
                ) -> void

                type stop_time =
                  {
                    arrival_time: Integer,
                    departure_time: Integer,
                    stop_id: String,
                    drop_off_type: Integer,
                    pickup_type: Integer
                  }

                class StopTime < OpenTransit::Internal::Type::BaseModel
                  attr_accessor arrival_time: Integer

                  attr_accessor departure_time: Integer

                  attr_accessor stop_id: String

                  attr_reader drop_off_type: Integer?

                  def drop_off_type=: (Integer) -> Integer

                  attr_reader pickup_type: Integer?

                  def pickup_type=: (Integer) -> Integer

                  def initialize: (
                    arrival_time: Integer,
                    departure_time: Integer,
                    stop_id: String,
                    ?drop_off_type: Integer,
                    ?pickup_type: Integer
                  ) -> void
                end
              end
            end
          end
        end
      end
    end
  end
end
