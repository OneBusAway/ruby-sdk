module OpenTransit
  module Models
    type current_time_retrieve_response =
      { data: OpenTransit::Models::CurrentTimeRetrieveResponse::Data }

    class CurrentTimeRetrieveResponse < OpenTransit::Models::ResponseWrapper
      def data: -> OpenTransit::Models::CurrentTimeRetrieveResponse::Data

      def data=: (
        OpenTransit::Models::CurrentTimeRetrieveResponse::Data _
      ) -> OpenTransit::Models::CurrentTimeRetrieveResponse::Data

      def initialize: (
        data: OpenTransit::Models::CurrentTimeRetrieveResponse::Data
      ) -> void

      type data =
        {
          entry: OpenTransit::Models::CurrentTimeRetrieveResponse::Data::Entry,
          references: OpenTransit::References
        }

      class Data < OpenTransit::Internal::Type::BaseModel
        attr_accessor entry: OpenTransit::Models::CurrentTimeRetrieveResponse::Data::Entry

        attr_accessor references: OpenTransit::References

        def initialize: (
          entry: OpenTransit::Models::CurrentTimeRetrieveResponse::Data::Entry,
          references: OpenTransit::References
        ) -> void

        type entry = { readable_time: String, time: Integer }

        class Entry < OpenTransit::Internal::Type::BaseModel
          attr_reader readable_time: String?

          def readable_time=: (String) -> String

          attr_reader time: Integer?

          def time=: (Integer) -> Integer

          def initialize: (?readable_time: String, ?time: Integer) -> void
        end
      end
    end
  end
end
