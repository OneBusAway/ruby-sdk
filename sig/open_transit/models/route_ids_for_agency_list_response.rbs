module OpenTransit
  module Models
    type route_ids_for_agency_list_response =
      { data: OpenTransit::Models::RouteIDsForAgencyListResponse::Data }

    class RouteIDsForAgencyListResponse < OpenTransit::Models::ResponseWrapper
      def data: -> OpenTransit::Models::RouteIDsForAgencyListResponse::Data

      def data=: (
        OpenTransit::Models::RouteIDsForAgencyListResponse::Data _
      ) -> OpenTransit::Models::RouteIDsForAgencyListResponse::Data

      def initialize: (
        data: OpenTransit::Models::RouteIDsForAgencyListResponse::Data
      ) -> void

      type data =
        {
          limit_exceeded: bool,
          list: ::Array[String],
          references: OpenTransit::References
        }

      class Data < OpenTransit::Internal::Type::BaseModel
        attr_accessor limit_exceeded: bool

        attr_accessor list: ::Array[String]

        attr_accessor references: OpenTransit::References

        def initialize: (
          limit_exceeded: bool,
          list: ::Array[String],
          references: OpenTransit::References
        ) -> void
      end
    end
  end
end
